name: Instagram Reel Automation

on:
  schedule:
    # Runs at 00:23 UTC daily for testing (adjust the cron schedule as needed)
    - cron: '25 13 * * *'
  workflow_dispatch:  # Allows manual triggering

jobs:
  post_reel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib schedule requests

      # If you stored your Google Drive credentials as a Base64 secret, decode and write them to a file.
      - name: Set up Google Drive credentials
        if: env.GOOGLE_DRIVE_CREDENTIALS_BASE64 != ''
        run: |
          echo "$GOOGLE_DRIVE_CREDENTIALS_BASE64" | base64 -d > credentials.json
        env:
          GOOGLE_DRIVE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS_BASE64 }}

      - name: Run automation script
        env:
          INSTAGRAM_USER_ID: ${{ secrets.INSTAGRAM_USER_ID }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
        run: |
          python auto_post.py

      # Commit the updated CSV file back to the repository so posted entries are removed permanently.
      - name: Commit updated CSV file
        run: |
          git config --global user.email "krishna.official0717@gmail.com"    # Replace with your email
          git config --global user.name "krish070904"                 # Replace with your GitHub username
          git add posts.csv
          git commit -m "Update posts.csv after posting a reel" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
